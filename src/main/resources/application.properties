##주석 Tomcat Server port 설정
#server.port=8081
#
##DataSource 관련 설정 :
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
#spring.datasource.username=jpastudy
#spring.datasource.password=jpastudy
#
#
##JPA/Hibernate 에서 DDL(create, drop, alter)문장을 자동으로 작성/실행
## 스프링 부트 어플리케이션이 실행될 대 drop table을 실행하고 create table을 실행
## -> 실제(현업) 동작 중인 어플리케이션에서는 절대로 사용하면 안 됨. 테스트 용도로만 사용.
##ddl-auto=none(기본값)으로 설정하면 create table이 실행되지 않음. -> 이 프로젝트에서는 이걸 사용.
#spring.jpa.hibernate.ddl-auto=none
#
##JPA/hibernate에서 자동으로 생성되는 SQL 문장을 보기 좋게 포맷팅해서 로그로 출력.
#spring.jpa.properties.hibernate.format_sql=true
#
##JPA/hibernate에서 자동으로 생성되는 SQL문장을 색상을 입혀서 출력.
#spring.jpa.properties.hibernate.highlight_sql = true
#
##hibernate의 로그 레벨 설정.
#logging.level.org.hibernate.SQL = debug
##PreparedState의 바인딩 파라미터 순서/값을 로그로 출력하기 위해서
#logging.level.org.hibernate.orm.jdbc.bind=trace
#
#logging.level.org.springframework.security = debug
#

server.port=8081

#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
#spring.datasource.url=jdbc:oracle:thin:@192.168.20.6:1521:xe
#spring.datasource.username=scott
#spring.datasource.password=tiger

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/testDb
spring.datasource.username=root
spring.datasource.password=123123


spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.highlight_sql=true

logging.level.org.hibernate.SQL=debug
logging.level.org.hibernate.orm.jdbc.bind=trace
# Spring security? ?? ??? ??
logging.level.org.springframework.security=debug

spring.servlet.multipart.max-file-size=1000000000
